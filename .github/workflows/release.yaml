name: Release

on:
  release:
    types: [released]

jobs:

  release:
    runs-on: ubuntu-latest
    container:
      image: danielflook/python-minifier-build:fedora34-2021-10-05
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set version statically
        run: |
          VERSION=${{ github.event.release.tag_name }}
          sed -i "s/setup_requires=.*/version='$VERSION',/; s/use_scm_version=.*//" setup.py

      - name: Upload
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          pip3 install --upgrade setuptools wheel twine
          python3 setup.py sdist bdist_wheel --universal
          twine upload --non-interactive dist/*

      - name: Build documentation
        run: |
          pip3 install sphinx sphinxcontrib-programoutput sphinx_rtd_theme
          pip3 install dist/*.tar.gz
          sphinx-build docs/source /tmp/build

      - name: Publish documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: /tmp/build
          enable_jekyll: false
          force_orphan: true
          full_commit_message: |
            Update docs

            [skip ci]

  test_package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [2.7, 3.4, 3.5, 3.6, 3.7, 3.8]
    needs: [release]
    container:
      image: danielflook/python-minifier-build:fedora30-2020-05-03
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install package
        run: |
          if [[ "${{ matrix.python }}" == "2.7" || "${{ matrix.python }}" == "3.7" ]]; then
             echo "pip is already installed"
          elif [[ "${{ matrix.python }}" == "3.8" ]]; then
             curl https://bootstrap.pypa.io/get-pip.py | python${{ matrix.python }}
          else
             curl https://bootstrap.pypa.io/pip/${{ matrix.python }}/get-pip.py | python${{ matrix.python }}       
          fi

          pip${{ matrix.python }} install python-minifier==${{ github.event.release.tag_name }}
          pyminify --version

  test_package_3_3:
    runs-on: ubuntu-latest
    needs: [release]
    container:
      image: danielflook/python-minifier-build:fedora28-2020-05-03
    steps:
      - name: Install package
        run: |
          curl https://bootstrap.pypa.io/pip/3.3/get-pip.py | python3.3
          pip3.3 install python-minifier==${{ github.event.release.tag_name }}
          pyminify --version

  test_package_3_9:
    runs-on: ubuntu-latest
    needs: [release]
    container:
      image: danielflook/python-minifier-build:fedora32-2020-10-11
    steps:
      - name: Install package
        run: |
          pip3.9 install python-minifier==${{ github.event.release.tag_name }}
          pyminify --version

  test_package_3_10:
    runs-on: ubuntu-latest
    needs: [release]
    container:
      image: danielflook/python-minifier-build:fedora34-2021-10-05
    steps:
      - name: Install package
        run: |
          pip3.10 install python-minifier==${{ github.event.release.tag_name }}
          pyminify --version
